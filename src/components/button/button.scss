@use 'sass:map';
@import '../global_mixins/global_mixins';

.button{
  $min_height: 4.4rem;
  $border_size : .1rem;
  @extend %not_select_and_pointer;
  display: inline-flex;
  &-longed{
    display: flex;
    width: 100%;
  }
  justify-content: center;
  align-items: stretch;
  border: none;
  outline: none;
  background-color: transparent;
  border-radius: 50vh;
  box-sizing: border-box;
  text-decoration: none;


  &__border_creator{
    border-radius: 50vh;
    margin: $border_size;
    display: flex;
    justify-content: center;
    width: 100%;
    background-color: map.get($color, 'contrast_with_colored');
  }
  &__background{
    &-main{
      background: map.get($gradient, 'main');
      &:hover, &.button-hover{
        background: map.get($gradient, 'main-opacity');
      }
    }
    &-secondary{
      background: map.get($gradient, 'secondary');
      &:hover, &.button-hover{
        background: map.get($gradient, 'secondary-opacity');
      }
    }
  }
  &__text{
    display: flex;
    align-items: center;
    justify-content: center;
    &-main{
      color: map.get($color, 'main');
    }
    &-secondary{
      color: map.get($color, 'secondary');
    }
    &-contrast{
      color: map.get($color, 'contrast_with_colored');
    }
    &-hovereble:hover, &-hovereble.button-hover{
      color: map.get($color, 'shade-50');
    }
  }
  &-arrow_left{
    position: relative;
    text-align: center;

    &::before{
      position: absolute;
      content: 'arrow_back';
      font-family: 'Material Icons Outlined';
      text-transform: none;
      font-weight: normal;
      font-size: 24px;
      text-align: center;

    }
    &:not(.button-short)::before {
      left: 1rem;
    }
  }
  &-arrow_right{
    position: relative;

    &::after{
      position: absolute;
      content: 'arrow_forward';
      font-family: 'Material Icons Outlined';
      text-transform: none;
      font-weight: normal;
      font-size: 24px;
    }
    &:not(.button-short)::after {
      right: 1rem;
    }
  }
  &-colored, &-transparent{
    min-width: $min_height;
    min-height: $min_height;
  }
  &-short{
    min-width: 4rem;
    min-height: $min_height;
  }
  &-colored:not(.button-short) {
    --button__padding: #{$min_height/2 - 0.2rem};
  }
  &-transparent:not(.button-short) {
    --button__padding: #{$min_height/2 - $border_size - 0.2rem};
  }
  &__text{
    padding: 0 var(--button__padding, 0);
  }
  &-fix_size{
    min-width: 4rem;
    min-height: 4rem;
    padding: 0;
  }

  &-colored{
  }
  &-transparent{
  }
  &-frameless{
  }
}
