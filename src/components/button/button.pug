append styles
  link(rel="stylesheet", href="../../../components/button/button.scss")

append mixins
  mixin button__text(options)
    if options.arrow=='left' || options.arrow=='all'
      span(class='button__left_arrow material-icons-outlined ')=options.arrow=='left'||options.arrow=='all' ? 'arrow_back' : ''
    if options.text
      span(class='button__text font-upper')=options.text ? options.text : options.arrow=='left'||options.arrow=='all'||options.arrow=='right' ? '' : 'УКАЖИ ПОДПИСЬ'
    if options.arrow=='right' || options.arrow=='all'
      span(class='button__right_arrow material-icons-outlined ')=options.arrow=='right'||options.arrow=='all' ? 'arrow_forward' : ''

  mixin button (options = {})
    -
      options.mod = options.mod ? options.mod : 'colored';
      options.color = options.color ? options.color : 'main';

    -
      options.class = options.class ? options.class : '';
      const mod = options.mod ? options.mod.split(/[,\s]\s*/) : [];
      options.class += options.mod ? ` button-${mod.join(' button-')} ` : '';
      delete options.mod;
      options.class += options.block_class ? ` ${options.block_class} ` : '';
      const block_class = options.block_class ? `${options.block_class}` : 'button';
      delete options.block_class;
      const color = `${options.color}`;
      delete options.color;
      const text = options.text ? options.text : '';
      delete options.text;
      const arrow = options.arrow ? options.arrow : '';
      delete options.arrow;

      if (mod.includes('colored') || mod.includes('transparent')){
        options.class += ` button__background-${color} `;
        if (mod.includes('transparent'))
          options.class += ` button__text-${color} `;
        if (mod.includes('colored'))
          options.class += ` button__text-contrast `;
      } else if (mod.includes('frameless')){
        options.class += ` button__text-${color} button__text-hovereble `;
      }

      let tag = 'button';
      if (!options.type || options.type == 'linck'){
        tag = 'a';
        delete options.type;
      }

    - options.class = `button ${options.class}`
    #{tag}()&attributes(options)&attributes(attributes)
      - const tr = mod.includes('transparent');
      if tr
        div(class= 'button__border_creator')
          +button__text({text: text, arrow: arrow,})
      else
        +button__text({text: text, arrow: arrow,})